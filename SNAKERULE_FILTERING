species_abbreviation = "AraTh"
fasta_file = "file1.Col-PEK1.5_Chr1-5_20220523.fasta"
global_gff = f"{species_abbreviation}.v01.gff"
prots_fai=f"{species_abbreviation}.prots.fai"
exclude_gff = f"{species_abbreviation}.exclude.gff"
uniq_gff = f"{species_abbreviation}.uniq.gff"
final_gff = f"{species_abbreviation}.v2.gff"
volume_name = "/Users/danifilho01/BASF"

rule all:
    input:
        global_gff,
        prots_fai,
        "exclude.list",
        final_gff

rule create_global_gff:
    output:
        global_gff
    shell:
        """
        printf "##gff-version 3\n" > {output}
        tail -n +2 */*maker.output/*_datastore/*/*/*/*gff | awk -F"\t" 'NF==9 && ($3=="gene" || $3 =="CDS" || $3 =="mRNA" || $3 =="exon" || $3 == "five_prime_UTR" || $3 == "three_prime_UTR" || $3 =="tRNA" )' >> {output}
        """

rule extract_proteins_and_index:
    input:
        global_gff
    output:
        prots_fai
    params:
        volume_name = volume_name
    shell:
        """
        docker run -v {params.volume_name}:/data biodepot/gffread gffread -S -y "/data/{species_abbreviation}.prots" -g "/data/{fasta_file}" "/data/{species_abbreviation}.v01.gff"
        docker run -v {params.volume_name}:/data dbest/samtools:v1.19.2 samtools faidx "/data/{species_abbreviation}.prots"
        """

rule find_and_process_smallest_value:
    input:
        prots_fai=f"{species_abbreviation}.prots.fai"
    output:
        "exclude.list"
    shell:
        """
        sort -k2 -n {input.prots_fai} > sorted_prots.fai
        MENOR_VALOR=$(sort -r -k2 -n {input.prots_fai} | cut -f -2 | grep "est2genome" | tail -n 1 | cut -f2)
        echo "$MENOR_VALOR"
        sort -k2 -n {input.prots_fai} | cut -f -2 | grep protein2genome | awk -v minor="$MENOR_VALOR" '{{if ($2 < minor) print $1}}' | sed 's/-mRNA-[0-9]*//' | sort | uniq > exclude.list
        rm sorted_prots.fai
        """

rule process_script:
    input:
        prots_fai = f"{species_abbreviation}.prots.fai",
        exclude_list = "exclude.list"
    output:
        exclude_gff = f"{species_abbreviation}.exclude.gff",
        uniq_gff = f"{species_abbreviation}.uniq.gff",
        final_gff = f"{species_abbreviation}.v2.gff"
    params:
        volume_name = volume_name
    shell:
        """
        printf "#gff-version 3\n" > {output.exclude_gff}
        docker run -v {params.volume_name}:/data python sh -c "pip install gff3 && python /data/gff_filter.py -e /data/{input.exclude_list} -g /data/{global_gff} >> /data/{output.exclude_gff}"
        docker run -v {params.volume_name}:/data dantestpy sh -c "python /data/validate_gff.py --gff /data/{output.exclude_gff} > {output.uniq_gff}"
        docker run -v {params.volume_name}:/data dantestpy sh -c "python /data/renameGff.py -g /data/{output.uniq_gff} -t /data/{species_abbreviation} > {output.final_gff}"
        """
